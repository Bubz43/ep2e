@use "scss/functions" as *;
@use "scss/mixins" as *;

* {
  box-sizing: border-box;
}

:host {
  display: block;
  will-change: transform;
}

:host([active]) {
  wl-list-item {
    background: alphav(var(--color-secondary), 0.25);
  }
}

:host([hidden]) {
  display: none;
}

wl-list-item {
  padding: 0 0 0 0.25rem;

  mwc-icon-button[slot='before'] {
    --mdc-icon-size: 40px;
    --mdc-icon-button-size: 44px;
    margin-right: 0.25rem;
  }
  @include textButton();

  .surprise-label {
    color: var(--color-text-lighter);
    margin-right: 0.5ch;
  }

  &:hover,
  &:focus-within {
    .menu {
      opacity: 1;
    }
  }

  &.hidden {
    .icon {
      opacity: 0.5;
    }
  }

  .icon {
    transition: opacity 100ms ease-in-out;
  }
  &.defeated {
    opacity: 0.85;

    .icon {
      filter: invert(1) drop-shadow(2px 4px 6px var(--color-negative));
    }
  }

  .actions {
    display: flex;
    align-items: center;

    button {
      min-width: 2rem;
      text-align: center;
      display: inline-block;
      height: 1.5rem;
    }
  }

  button {
    &[disabled] {
      color: var(--color-text-lighter);
    }
  }
  .name {
    width: max-content;
  }
}

.menu {
  opacity: 0;
  transition: opacity 50ms;
  --mdc-icon-button-size: 1.5rem;
}

.container {
  display: inline-grid;
  grid-template-areas: 'content';
  place-items: center;
  > * {
    grid-area: content;
    transition: transform opacity 100ms ease-in-out;
    display: inline-block;
  }
}

.can-delay {
  .pause {
    opacity: 0;
  }
  &:hover {
    .initiative {
      opacity: 0;
    }
    .pause {
      opacity: 1;
    }
  }
}

.status {
  display: flex;
  flex-flow: row wrap;
  font-size: 14px;
  > * {
    margin: 0 0.5ch 0.25rem 0;
    @include animate-css(fadeIn, 250ms);
  }
}

.mini-button {
  --mdc-icon-button-size: 1rem;
  --mdc-icon-size: 1rem;
  height: 1rem;
}

notification-coin {
  right: unset;
  left: -0.2rem;
  bottom: 0;
  top: unset;
}

.defeat {
  margin-right: 1ch;
}

.time,
.used-pool {
  transform: translateY(-0.15rem);
}
