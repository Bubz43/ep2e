@use "scss/functions" as *;
@use "scss/mixins" as *;

@include resetUnorderedList();

* {
  box-sizing: border-box;
}

:host {
  display: grid;
  grid-auto-rows: min-content;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
  box-shadow: none;
  border-right-width: 1px;
  border-left: none;
  overflow: hidden;
  min-width: 350px;
}

header {
  padding: 0.5rem 1rem;
  button {
    all: unset;
    border-bottom: 1px solid var(--color-border);
    font-family: var(--font-2);
    @include truncate(350px);
    font-size: 1rem;
    margin-right: 0.25ch;

    &:hover,
    &:focus {
      cursor: pointer;
      border-bottom-color: var(--color-text-lighter);
    }
  }
  .details {
    color: var(--color-text-lighter);
  }
}

.pools {
  display: flex;
  justify-content: space-evenly;
  border-top: 1px solid alphav(var(--color-border), 0.5);
}

.armor-rating,
.movement {
  margin: 0 1rem;
  font-size: 1rem;
  > span {
    white-space: nowrap;
  }
  .armor-value,
  .movement-rate {
    color: var(--color-text-lighter);
    margin-right: 0.5ch;
  }
}

health-item {
  --health-item-padding: 0.25rem 1rem;
}

.armor {
  display: grid;
  grid-template-areas: 
  "label layers"
  "values values";
  display: flex;
  flex-flow: row wrap;
  grid-template-columns: min-content;
  padding: 0.25rem 1rem;
  .label {
    grid-area: label;
    font-size: large;
    white-space: nowrap;
    margin: 0 0.5rem;
  }
  .layers {
    grid-area: layers;
    color: var(--color-text-lighter);
    align-self: end;
  }
  .values {
    grid-area: values;
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    column-gap: 0.25rem;
    flex: 1;
    .value {
      text-align: center;
      background: alphav(var(--color-grey), 0.25);
     white-space: nowrap;
     
    }
  }
}