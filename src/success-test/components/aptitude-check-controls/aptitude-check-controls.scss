@use "scss/functions" as *;
@use "scss/mixins" as *;

@include styled-scrollbars();

* {
  box-sizing: border-box;
}

:host {
  display: grid;
  grid-template-areas: 'sections modifiers' 'sections footer';
  grid-template-rows: 1fr auto;
  gap: 0.25rem;
  min-height: 300px;
  .sections {
    grid-area: sections;
  }
  .modifiers {
    grid-area: modifiers;

  }
  footer {
    grid-area: footer;
  }
  background: linear-gradient(
    to bottom,
    alphav(var(--color-bg), 0.8),
    alphav(var(--color-bg-alt), 0.8)
  );
  padding: 0.5rem 1rem;
}

footer {
  display: flex;
  justify-content: flex-end;
  padding: 0.25rem;
}

.sections {
  display: grid;
  gap: 0.25rem;
  > * {
    display: flex;
    border: 1px solid var(--color-border);
    > *:not(.vertical-text) {
      align-self: center;
    }
  }
}

.aptitude-info {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  place-items: center;
  flex: 1;
  sl-form {
    display: contents;
  }
  sl-field {
    width: 100%;
  }
}

.actions {
  sl-form {
    flex: 1;
    grid-template-columns: 1fr 1fr;
  }
}

.pools {
  ul {
    margin: 0;
    padding: 0 0.25rem;
    list-style: none;
    display: grid;
    grid-template-columns: 200px 200px;
    align-items: center;
    position: relative;
  }
}
.pool {
  display: flex;
  align-items: center;
  pool-item {
    pointer-events: none;
    flex: 1;
    padding: 0 0.25rem;
  }

  div {
    display: grid;
    align-items: center
  }

  @include textButton();

  button {
    padding: 0 0.5rem;
    justify-content: center;
    text-align: center;
    &.active {
      box-shadow: 0 0 1px 2px var(--color-secondary) inset;
    }
  }
}


.vertical-text {
  text-transform: uppercase;
  // color: var(--color-text-lighter);
  writing-mode: vertical-lr;
  text-orientation: upright;
  letter-spacing: -0.25rem;
  padding: 0.25rem 0.35rem 0.5rem;
  font-size: small;
  width: min-content;

  border-right: 1px solid var(--color-border);
  background: var(--color-bg);
  text-align: center;
}

.modifiers {
  border: 1px solid var(--color-border);
  overflow-y: scroll;
  overflow-x: hidden;
  height: 200px;
  min-height: 100%;

  transition: opacity 200ms ease-in-out;

  &.ignored {
    opacity: 0.5;
  }

  sl-header {
    border-color: var(--color-border);
  }
  sl-animated-list {
    max-width: 300px;
    font-size: 15px;
  }

  wl-list-item {
    padding: 0 1rem;
    transition: background 100ms ease-in-out;
    &.tall {
      padding: 0.25rem 1rem;
    }
    &:hover {
      mwc-icon {
        color: var(--color-negative);
      }
    }
  }

  .source,
  .requirement {
    display: inline-block;
    @include truncate(200px);
  }

  .requirement {
    color: var(--color-text-lighter);
  }

  [slot='before'] {
    width: 0.25rem;
  }

  mwc-icon[slot='before'] {
    margin-left: -0.6rem;
    margin-right: 1.6rem
  }

  span[slot='before'] {
    border: 1px solid var(--color-grey);
    height: 2rem;
    margin-right: 1rem;

    &:not(.tall) {
      opacity: 0;
      height: 1.5rem;
    }

    &.active {
      background: var(--color-grey);
    }
  }
}

.totals {
  display: grid;
  grid-auto-flow: column;
  place-items: center;
  padding: 0.25rem;
  gap: 0.25rem;
}