@use "scss/functions" as *;
@use "scss/mixins" as *;

* {
  box-sizing: border-box;
}

:host {
  display: block;
  position: relative;
  overflow: hidden;
}

:host([clickable]) {
  z-index: 0;
  .view {
    cursor: pointer;
  }
}

:host([disabled]) {
  pointer-events: none;
}

.view {
  display: grid;
  grid-template-columns: min-content;
  grid-template-areas:
    '.. info info'
    'bars bars bars';
  position: relative;
  padding: var(--health-item-padding, 0.25rem 0.5rem);
  outline: none;
  row-gap: 0.125rem;
  font-family: var(--font-2);

  &.dead {
    .health-icon {
      filter: drop-shadow(1px 2px 10px var(--color-secondary)) invert(1);
    }
  }
}
.drop-helper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: alphav(var(--color-bg), 0.9);
  z-index: 2;
  display: grid;
  place-items: center;
  pointer-events: none;
  font: 1.1rem;
}

.info {
  grid-area: info;
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  line-height: 1rem;

  .damage-info {
    margin-left: auto;
  }
}

.health-icon {
  height: 38px;
  z-index: 1;
  grid-area: 1 / 1 / -1 / 2;
  filter: drop-shadow(0 0 2px black) opacity(0.9);
  margin: 0 0.5rem;
}

.health-type {
  grid-area: type;
  @include truncate(100px);
  min-width: 100%;
  padding-right: 1rem;
  flex: 1;
  z-index: 1;
  text-transform: uppercase;
  color: var(--color-text-lighter);
  letter-spacing: 2px;
}

.damage-info {
  grid-area: 2 / 2 / 3 / 3;
  display: flex;
  flex-flow: row wrap;
  z-index: 1;
}

.regen-available {
  grid-area: 1 / 3 / 2 / 4;
  filter: opacity(0.5);
  z-index: 1;
  justify-self: end;
  &.ready {
    @include animate-css(pulse, 1s, Infinite);
    filter: drop-shadow(0 0 3px var(--color-secondary));
  }
}

.damage {
  text-shadow: 2px 3px 4px black;
  white-space: nowrap;
  > span {
    &:first-of-type {
      font-size: larger;
    }
    &:not(:first-of-type) {
      font-size: 13px;
      font-weight: lighter;
      &::before {
        content: ' / ';
        opacity: 0.6;
      }
    }
  }
  &.dying {
    > span:nth-of-type(2) {
      font-weight: bold;
    }
  }
  &.dead {
    > span:last-of-type {
      font-weight: bold;
    }
  }

  & + .wounds {
    margin-left: auto;
    padding-left: 1rem;
  }
}

.wounds {
  grid-area: 2 / 3 / 3 / 4;
  display: flex;
  align-items: center;
  text-shadow: 2px 3px 4px black;

  justify-content: flex-end;
  z-index: 1;
  > *:not(.wound-threshold) {
    display: flex;
    align-items: center;

    & + * {
      margin-left: 0.25rem;
    }
  }
  .wound-value {
    font-size: 14px;
    min-width: 1ch;
    text-align: center;
    opacity: 0.8;
  }
  .wound-icon {
    height: 16px;
    margin-right: 0.25ch;
  }

  .threshold-label {
    font-size: 15px;
    font-weight: light;
  }
  .wound-threshold {
    white-space: nowrap;
  }
}

.bars {
  grid-area: bars;
  display: flex;
  align-self: end;
  background: alphav(var(--color-border), 0.4);
}

.bar {
  flex: 1;
  border: 1px solid lightv(var(--color-bg), 0.8);
  height: 0.5rem;
  position: relative;
  &::before {
    content: '';
    background: alphav(var(--color-negative), 0.8);
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    position: absolute;
    transition: transform 300ms ease-out, opacity 300ms ease-in-out;
    transform-origin: left;
    transform: scaleX(var(--percent));
    opacity: 0.8;
  }
}
