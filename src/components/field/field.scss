@use "scss/functions" as *;
@use "scss/mixins" as *;

@include styled-scrollbars;

* {
  box-sizing: border-box;
}

:host {
  display: grid;
  transition: opacity 160ms ease-in-out;
  height: min-content;
  // gap: 0px 4px;
  padding-top: 2px;
  grid-template-columns: min-content 1fr min-content;
  grid-template-rows: 20px minmax(20px, fit-content) min-content;
  grid-template-areas:
    'before label after'
    'before wrapper after'
    'footer footer footer';

  --transition: all 125ms ease-in-out;
}

:host([minimal]) {
  .label,
  footer {
    display: none
  }
}

@mixin floatLabel {
  transform: translate(10px, 0);
}

:host(:focus-within),
:host(:hover) {
  .number-buttons {
    > * {
      opacity: 1;
    }
  }

  .help-text {
    opacity: 0.8;
  }
}

:host([helppersistent]) {
  .help-text {
    opacity: 0.8;
    height: 14px;
  }
}

:host(:hover) {
  footer {
    &::after {
      opacity: 0.3;
      transform: scale(1);
    }
  }
}
:host(:focus-within) {
  .label {
    @include floatLabel;
  }

  footer {
    &::after {
      opacity: 1;
      transform: scale(1);
    }
  }
}

:host([disabled]) {
  opacity: 0.6;
  pointer-events: none;

  .number-buttons {
    pointer-events: none;
    opacity: 0.2;
  }

  .select {
    display: none;
  }
}

.label {
  grid-area: label;
  transform: translate(10px, 50%) scale(1.3);
  transition: transform 125ms cubic-bezier(0.4, 0, 0.2, 1);
  transform-origin: top left;
  --label-font-size: 13px;
  padding: 1px 0;
  // z-index: 2;
  letter-spacing: 1px;
  width: fit-content;
  opacity: 0.7;
  white-space: nowrap;
  text-overflow: ellipsis;
  max-width: 160px;
  overflow: hidden;
  min-width: 100%;
  height: 1rem;
  &.above {
    @include floatLabel;
  }
}

.input-wrapper {
  grid-area: wrapper;
  border: 0;
  margin: 0 4px 0px 10px;
  position: relative;
  min-width: fit-content;
  display: flex;
  height: 23px;

  &.textarea {
    min-height: 80px;
    // min-width: 100%;
    height: fit-content;
    // height: 100%;
    // overflow-y: auto;
  }

  ::slotted(*) {
    // all: unset;
    color: var(--color-text);
    display: block;
    background: transparent !important;
    border: 0 !important;
    outline: 0 !important;
    box-shadow: 0 0 0 black !important;
    width: 100% !important;
    margin: 0 !important;
    padding: 0 !important;
    font-size: 1.1rem !important;
    padding-bottom: 2px !important;
    font-family: var(--font-1);
    flex: 1;
  }

  ::slotted(textarea) {
    min-width: 200px;
    min-height: 80px;
    overflow-x: hidden;
    overflow-y: auto;
    resize: none;
    max-width: calc(100% - 0.25rem) !important;
    // max-width: calc(100% - 1.3rem) !important;
    line-height: 1.2em;
    position: relative;
    top: 1px;
  }

  ::slotted(textarea[data-resizable]) {
    resize: vertical;
  }

  ::slotted(select) {
    white-space: nowrap;
    background: var(--field-background);
    min-width: fit-content;
    transform: translate(-4px, -4px);
    height: 27px !important;
    // -webkit-appearance: media-slider;
    // width: calc(100% + 4px) !important;
    min-height: 44px !important;
    position: relative;
    top: -7px;

    @supports (-moz-appearance: none) {
      transform: translate(0, -3px) !important;
      text-indent: -2px;
      transform: none;
      -moz-appearance: none;
      padding-right: 26px;
    }
  }

  ::slotted(select:focus) {
    color: var(--color-text);
  }

  ::slotted(select:-moz-focusring) {
    color: transparent !important;
    text-shadow: 0 0 0 var(--color-bg);
  }

  ::slotted([type='number']) {
    -moz-appearance: textfield !important;
  }

  ::slotted([data-validate-formula]) {
    font-family: var(--font-mono);
  }
}

slot[name='before'],
slot[name='after'] {
  place-self: center;
  display: grid;
  place-items: center;
  max-height: 40px;
}

slot[name='before'] {
  grid-area: before;
}

slot[name='after'] {
  grid-area: after;
}

::slotted([slot='before']) {
  padding: 4px 0px 4px 8px;
  line-height: 1rem;
}

::slotted([slot='after']) {
  padding: 4px 8px;
  padding-left: 1rem;
}
.select-icon {
  opacity: 0.65;
  pointer-events: none;
  position: absolute;
  right: 0;
}
.number-buttons {
  grid-area: after;
  display: grid;
  grid-auto-flow: column;
  align-items: end;
  background: var(--field-button-background, var(--field-background));
  padding: 0 8px 1px 0px;
  gap: 0.25rem;
  transform: translateY(9px);

  > button {
    --mdc-icon-size: 18px;
    line-height: 0;
    padding: 0;
    opacity: 0;
    transition: opacity 125ms ease-in-out 50ms, background 50ms ease-in-out;
    transition-delay: 50ms;
    background: rgba(black, 0.2);
    border: 1px solid rgba(white, 0.2);
    outline: 0;
    color: white;
    border-radius: 4px;
    cursor: pointer;
    z-index: 10;

    &[disabled] {
      pointer-events: none;
      color: grey;
    }

    &:hover {
      background: var(--color-primary);
    }

    &:active {
      transform: scale(1.1);
    }
  }
}

footer {
  grid-area: footer;
  position: relative;
  display: flex;
  justify-content: space-between;
  padding: 6px 0.75rem;
  width: calc(100% + 6px);
  left: -3px;
  pointer-events: none;
  &::before {
    background: lightv(var(--color-bg), 2);
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.85);
  }

  &::before,
  &::after {
    content: '';
    display: block;
    position: absolute;
    top: 2px;
    left: 10px;
    width: calc(100% - 20px);
    height: 2px;
    box-sizing: border-box;
  }

  &::after {
    opacity: 0;
    transition: var(--transition);
    background: var(--color-secondary);
    transform-origin: center;
    transform: scaleX(0.25);
  }

  &.invalid {
    &::before,
    &::after {
      background: var(--color-negative) !important;
    }
  }
}

.help-text {
  white-space: nowrap;
  overflow: hidden;
  opacity: 0;
  // text-align: center;
  font-size: 11px;
  transition: var(--transition);
  display: inline-block;
}

.character-counter {
  font-size: 11px;
  text-align: right;
  display: inline-block;
}
