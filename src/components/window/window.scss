@use "scss/functions" as *;
@use "scss/mixins" as *;

@include styled-scrollbars;

* {
  box-sizing: border-box;
}

:host {
  display: grid;
  position: absolute;
  grid-template-rows: min-content 1fr;
  grid-auto-rows: min-content;
  left: 30%;
  top: 20%;
  width: max-content;
  box-shadow: 0 0 6px black;
  background-color: rgba(black, 0.75);
  max-height: 100%;
  max-width: 100%;
  -webkit-backdrop-filter: blur(5px) contrast(85%);
  backdrop-filter: blur(5px) contrast(85%);
  transition: opacity 25ms ease-in-out;

  ::slotted([slot='footer']) {
    display: flex;
    align-items: center;
    flex-flow: row wrap;
    min-width: 100%;
    box-shadow: 0 -5px 5px -5px rgba(0, 0, 0, 0.5);
  }
}

:host([focused]) {
  box-shadow: 0 0 10px black;

  #header {
    &:not(.alt) {
      background: rgba(148, 49, 176, 0.2);
      background: alphav(var(--color-grey), 0.25);
    }
    &.alt {
      .controls {
        background: rgba(148, 49, 176, 0.2);
        z-index: 2;
      }
    }
  }
}

:host([minimized]) {
  slot[name='footer'] {
    display: none;
  }
  .controls {
    position: static;
  }
  #header {
    background: alphav(var(--color-grey), 0.2);
    overflow: visible;
    .heading {
      max-width: 200px;
      height: 28px;
      overflow: visible;
      span {
        margin: 0 0 0 0.5rem;
        text-align: left;
      }
      img {
        height: 36px;
        margin-left: -0.75rem;
        filter: drop-shadow(2px 4px 6px black);
        width: unset;
        transition: height 100ms 50ms ease-out, width 100ms 50ms ease-out;
      }
    }
    ::slotted([slot='header']) {
      pointer-events: none;
    }
    slot[name='header-button'] {
      display: none;
    }
    // z-index: 8;
    z-index: 1;
  }
  .resize-handle {
    display: none;
  }
  .content {
    display: none;
  }
}

slot[name='footer'] {
  display: block;
}

#header {
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: 1fr auto auto;
  position: relative;
  cursor: move;
  background: alphav(var(--color-grey), 0.2);

  transition: background 100ms ease-in-out;
  min-width: 200px;
  z-index: 1;

  height: 32px;
  overflow: hidden;
  // z-index: 3;
  ::slotted(wl-list-item) {
    --list-item-padding: 4px;
    background: transparent;
  }
  ::slotted([slot='header']) {
    background: linear-gradient(
      to bottom,
      var(--color-bg-alt),
      var(--color-bg)
    );
  }

  &.alt {
    background: linear-gradient(
      to bottom,
      alphav(var(--color-bg), 0.9),
      transparent
    );
    cursor: initial;
    .heading {
      display: none;
    }
    .controls {
      margin-left: none;
      background: alphav(var(--color-bg), 0.2);
      z-index: 2;
    }
  }
}

.heading {
  padding: 0 0.25rem;
  font-size: larger;
  text-shadow: 0px 0px 10px black;
  flex: 1;
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-template-rows: 2rem;
  align-items: center;

  > * {
    @include truncate(400px);
  }

  img {
    display: inline-block;
    width: 0;
    & + span {
      grid-column: 2;
    }
  }
  span {
    min-width: 100%;
    grid-column: span 2;
    margin-left: 0.5ch;
  }
}

.controls {
  overflow: hidden;
  --list-item-bg: transparent;
  --list-item-padding: 1px 4px;
  margin-left: 0.5rem;
  display: flex;
  height: 31px;

  transition: background 75ms ease-in-out;
  --list-item-bg-hover: #{alphav(var(--color-bg), 0.5)};
  --list-item-transition: all 75ms ease-in-out;
}

.close-button {
  &:hover {
    color: red;
  }
}

.content {
  min-width: calc(100% - 2px);
  min-height: max-content;
  max-height: 100%;
  max-width: calc(100% - 2px);
  overflow: auto;
  display: flex;
  flex-flow: column;
  transform-origin: top;
  box-sizing: content-box !important;
  // z-index: 2;
  border: 1px solid alphav(var(--color-grey), 0.25);
  border-top: none;

  ::slotted(*) {
    overflow-x: hidden;
    flex: 1;
  }
}

.both-resize {
  position: absolute;
  cursor: nwse-resize;
  bottom: -4px;
  right: -4px;
  height: 10px;
  width: 10px;
  z-index: 1;

  &::before,
  &::after {
    content: '';
    display: block;
    height: 1px;
    background: var(--color-text);
    opacity: 0.5;
  }

  &::before {
    width: 13px;
    transform: translate(-6px, 0) rotate(-45deg);
  }

  &::after {
    width: 6px;
    transform: translate(0, 1px) rotate(-45deg);
  }
}

.vertical-resize,
.horizontal-resize {
  position: absolute;
  z-index: 1;
}

.vertical-resize {
  height: 8px;
  bottom: -8px;
  left: 0;
  width: calc(100% - 12px);
  cursor: ns-resize;
  width: 100%;

  &.alt {
    top: -8px;
    bottom: unset;
    width: 100%;
  }
}

.horizontal-resize {
  width: 8px;
  top: 0;
  right: -6px;
  height: calc(100% - 12px);
  cursor: ew-resize;
  height: 100%;

  &.alt {
    right: unset;
    left: -6px;
    height: 100%;
  }
}
