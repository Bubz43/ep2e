@use "scss/functions" as *;
@use "scss/mixins" as *;

@include widgetless-number-inputs;


* {
  box-sizing: border-box;
}

:host {
  display: block;
  transition: opacity 160ms ease-in-out;
  --transition: all 125ms ease-in-out;
  min-width: 245px;
  width: min-content;
  position: relative;
}

:host([disabled]) {
  opacity: 0.6;
  pointer-events: none;
}


:host(:focus-within),
:host(:hover) {
  .pretty-value {
    opacity: 0;
  }
  mwc-formfield {
    opacity: 1;
  }
}

:host(:hover) {
  footer {
    &::after {
      opacity: 0.5;
      transform: scale(1.02);
    }
  }
}

:host(:focus-within) {
  footer {
    &::after {
      opacity: 1;
      transform: scale(1.02);
    }
  }
}

.infinite-toggle {
  border: 0;
  padding: 0;
  font-size: 1.7rem;
  color: var(--color-text-lighter);
  line-height: 1rem;
  background: transparent;
  outline: none;
  position: absolute;
  right: 0.75rem;
  transform: translateY(0.2rem);
  &.infinite {
    color: var(--color-secondary);
    & + sl-form {
      .pretty-value {
        opacity: 1;
      }
      mwc-formfield {
        display: none;
      }
    }
  }
  &:not([disabled]) {
    cursor: pointer;
    &:focus {
      text-shadow: var(--text-highlight);
    }
  }
}

slot {
  display: none;
}

sl-form {
  display: flex;
  align-items: center;
  height: 18px;
  min-width: 230px;
  position: relative;
  bottom: 3px;
  padding-left: 0.6rem;
  mwc-formfield {
    opacity: 0;
    transition: opacity 100ms ease-in-out;
    margin-right: 1rem;
    &:last-of-type {
      margin-right: 0.5rem;
    }
  }
}

.pretty-value {
  position: absolute;
  opacity: 1;
  transition: opacity 100ms ease-in-out;
  top: -0.25rem;
  font-size: 1.1rem;
  left: 0.6rem;
  right: 0;
  bottom: 0;
  pointer-events: none;
  line-height: initial;
  font-family: var(--font-1);;
  @include truncate(100%)
}

.label {
  grid-area: label;
  // transform: translate(-3px, 70%) scale(1.3);
  // transition: transform 125ms ease-in-out, opacity 125ms;
  // transform-origin: top left;
  --label-font-size: 13px;
  padding: 0px 0 0 0.75rem;
  // z-index: 2;
  letter-spacing: 1px;
  width: fit-content;
  opacity: 0.7;
  position: relative;
  left: -2px;
  // transform: translateY(2px) scale(1);
}

input {
  background: alphav(var(--color-text), 0.1);
  border: none;
  padding: 0;
  font-size: 1rem;
  width: 3ch;
  min-width: 80%;
  text-align: center;
  font-family: var(--font-alt);
  color: var(--color-text);
  transition: background 200ms ease-in-out opacity 200ms ease-in-out;
  line-height: 1em;
  border-radius: 3px;

  &:focus {
    box-shadow: none;
    outline: none;
    box-shadow: 0 0 0 1px var(--color-secondary) inset;
  }
  &:invalid {
    outline-color: var(--color-negative);
  }
  &[disabled] {
    opacity: 0.5;
  }
  // &[value="0"] {
  //   opacity: 0.8;
  //   color: var(--color-text);
  // }
}

footer {
  position: relative;
  display: flex;
  justify-content: space-between;
  padding: 6px 0.75rem;
  width: calc(100% + 6px);
  left: -3px;
  &::before {
    background: lightv(var(--color-bg), 2);
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.85);
  }

  &::before,
  &::after {
    content: "";
    display: block;
    position: absolute;
    top: 2px;
    left: 10px;
    width: calc(100% - 20px);
    height: 2px;
    box-sizing: border-box;
  }

  &::after {
    opacity: 0;
    transition: var(--transition);
    background: var(--color-secondary);
    transform-origin: center;
    transform: scaleX(0.25);
  }

  &.invalid {
    &::before,
    &::after {
      background: var(--color-negative) !important;
    }
  }
}
