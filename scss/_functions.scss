// credit: https://codyhouse.co/blog/post/how-to-combine-sass-color-functions-and-css-variables

// return css color variable with different opacity value
@function alphav($color, $opacity) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-h: var(#{$color + '-h'});
  $color-s: var(#{$color + '-s'});
  $color-l: var(#{$color + '-l'});
  @return hsla($color-h, $color-s, $color-l, $opacity);
}

// replace substring with another string
// credits: https://css-tricks.com/snippets/sass/str-replace-function/
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }
  @return $string;
}

// .component {
//   background-color: lightv(var(--ep-color-primary), 1.2);
// }
@function lightv($color, $lightnessMultiplier) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-h: var(#{$color + '-h'});
  $color-s: var(#{$color + '-s'});
  $color-l: var(#{$color + '-l'});
  @return hsl($color-h, $color-s, calc(#{$color-l} * #{$lightnessMultiplier}));
}

// .component {
//   background-color: satv(var(--ep-color-primary), 1.2);
// }
@function satv($color, $saturationMultiplier) {
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-h: var(#{$color + '-h'});
  $color-s: var(#{$color + '-s'});
  $color-l: var(#{$color + '-l'});
  @return hsl($color-h, calc(#{$color-s} * #{$saturationMultiplier}), $color-l);
}
